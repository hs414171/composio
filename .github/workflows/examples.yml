name: Example Tests

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      api_key:
        required: false
        type: string
      base_url:
        required: false
        type: string
  workflow_dispatch:


jobs:
  run-tests:
    name: Run Example Tests
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        package:
          [
            autogen,
            camel,
            claude,
            crew_ai,
            griptape,
            julep,
            langchain,
            llamaindex,
            lyzr,
            openai,
            praisonai,
            langgraph,
            phidata,
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Tests
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
          JULEP_API_KEY: ${{secrets.JULEP_API_KEY}}
          JULEP_API_URL: ${{secrets.JULEP_API_URL}}
          COMPOSIO_API_KEY: ${{ inputs.api_key || secrets.COMPOSIO_API_KEY_RELEASE }}
          COMPOSIO_BASE_URL: ${{ inputs.base_url || secrets.COMPOSIO_BASE_URL }}
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean

          python -m pip install --upgrade pip pipenv pytest
          python -m pip install plugins/${{matrix.package}}
          python -m pip install '.[all]'
          python -m pip install 'numpy<2' python-dotenv
          
          composio apps update

          CI=false COMPOSIO_BASE_URL=https://backend.composio.dev/api PLUGIN_TO_TEST=${{matrix.package}} pytest -vv tests/test_example.py
      - name: Slack Notification on Failure
        if: ${{ failure() && !contains(github.event.pull_request.title, 'release') && !contains(github.event.pull_request.title, 'Release') }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_TECH_WEBHOOK }}
